__NUXT_JSONP__("/projects", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V){return {data:[{posts:[{slug:v,description:"My personal website and blog.",title:v,date:"2021-02-16T00:00:00-08:00",github:"https:\u002F\u002Fgithub.com\u002Fj43cheun\u002Fblog.git",tags:[w,x,y,z,A,B,C,D],toc:[],body:{type:p,children:[{type:b,tag:k,props:{},children:[{type:a,value:"This website here, aptly named "},{type:b,tag:q,props:{},children:[{type:a,value:v}]},{type:a,value:", is my personal website. I built it in\norder to host content about my personal and professional projects, as well as my\nblog. I also built it as an excuse to practice some of the web development\nskills I learned during the COVID-19 pandemic in 2020."}]},{type:a,value:i},{type:b,tag:k,props:{},children:[{type:a,value:"For the implementation, I went with a statically generated website built using\nthe "},{type:b,tag:d,props:{href:"https:\u002F\u002Fnuxtjs.org",rel:[e,f,g],target:h},children:[{type:a,value:w}]},{type:a,value:" framework for the frontend and the\n"},{type:b,tag:d,props:{href:"https:\u002F\u002Fcontent.nuxtjs.org",rel:[e,f,g],target:h},children:[{type:b,tag:"code",props:{},children:[{type:a,value:"@nuxt\u002Fcontent"}]}]},{type:a,value:" (content) module CMS. Going with\nthis implementation had several advantages. First, posts are formatted and\nstored in "},{type:b,tag:d,props:{href:"https:\u002F\u002Fdaringfireball.net\u002Fprojects\u002Fmarkdown",rel:[e,f,g],target:h},children:[{type:a,value:A}]},{type:a,value:". This allows\npost content to be decoupled from the layout of the website. Second, there is no\ndatabase to manage and in turn, no database security concerns to contend with.\nThird, since Nuxt.js is built on top of "},{type:b,tag:d,props:{href:"https:\u002F\u002Fvuejs.org",rel:[e,f,g],target:h},children:[{type:a,value:x}]},{type:a,value:", it is easy\nto reuse code by defining custom reusable components using HTML, JavaScript, and\nCSS. Fourth, using Nuxt.js and Vue.js does not require me to learn a new\nprogramming language (e.g., Ruby, Go, etc.). Finally, the website is static, so\nit can be hosted free of charge on "},{type:b,tag:d,props:{href:"https:\u002F\u002Fpages.github.com",rel:[e,f,g],target:h},children:[{type:a,value:"GitHub Pages"}]},{type:a,value:E}]},{type:a,value:i},{type:b,tag:k,props:{},children:[{type:a,value:"As for the layout, I went with a plain and simple responsive UI built using the\n"},{type:b,tag:d,props:{href:"https:\u002F\u002Fbuefy.org",rel:[e,f,g],target:h},children:[{type:a,value:y}]},{type:a,value:" and "},{type:b,tag:d,props:{href:"https:\u002F\u002Fbulma.io",rel:[e,f,g],target:h},children:[{type:a,value:z}]},{type:a,value:" CSS frameworks. Buefy\nwas chosen for its integration with Nuxt.js while Bulma was chosen for its ease\nof use (Bulma is a CSS-only framework) and customizability. Other CSS frameworks\nwere also considered. In particular, I felt "},{type:b,tag:d,props:{href:"https:\u002F\u002Fvuetifyjs.com\u002F",rel:[e,f,g],target:h},children:[{type:a,value:"Vuetify"}]},{type:a,value:"\nwas too rigid and I felt "},{type:b,tag:d,props:{href:"https:\u002F\u002Fbootstrap-vue.org",rel:[e,f,g],target:h},children:[{type:a,value:"Bootstrap-Vue"}]},{type:a,value:" was not\nintuitive to use."}]},{type:a,value:i},{type:b,tag:j,props:{className:[u,r]},children:[{type:a,value:c},{type:b,tag:j,props:{className:[n,"is-2"]},children:[{type:a,value:l},{type:b,tag:m,props:{src:"\u002Fprojects\u002Fblog\u002Fimg\u002Fblog-mobile.PNG"},children:[]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:j,props:{className:[n]},children:[{type:a,value:l},{type:b,tag:m,props:{src:"\u002Fprojects\u002Fblog\u002Fimg\u002Fblog-desktop.png"},children:[]},{type:a,value:c}]},{type:a,value:i}]}]},dir:s,path:"\u002Fprojects\u002Fblog",extension:t,createdAt:o,updatedAt:o},{slug:"seefood",description:"A very simple iOS app for identifying food.",title:"SeeFood",date:"2020-12-26T03:09:48-08:00",github:"https:\u002F\u002Fgithub.com\u002Fj43cheun\u002FSeeFood.git",tags:[F,G,H,I,J],toc:[],body:{type:p,children:[{type:b,tag:k,props:{},children:[{type:a,value:"SeeFood is a very simple iOS app that I wrote for identifying food. Given an\nimage, SeeFood will try to determine whether the subject is a "},{type:b,tag:q,props:{},children:[{type:a,value:K}]},{type:a,value:L},{type:b,tag:q,props:{},children:[{type:a,value:"not a hot dog"}]},{type:a,value:". SeeFood is a fork of\n"},{type:b,tag:"nuxt-link",props:{to:M},children:[{type:a,value:N}]},{type:a,value:" with the Garbage Net Core ML model\nreplaced with the Hot Dog Net Core ML model. Classification is handled\nexceedingly well by the Hot Dog Net Core ML model, which I created using\nApple's Create ML app and trained using the\n"},{type:b,tag:d,props:{href:"https:\u002F\u002Fwww.kaggle.com\u002Fdansbecker\u002Fhot-dog-not-hot-dog",rel:[e,f,g],target:h},children:[{type:a,value:"Hot Dog - Not Hot Dog"}]},{type:a,value:"\ndataset from Kaggle by DanB. In practice, I've noticed that classification has\nbeen mostly accurate, with the only minor quirk being an issue in\ndifferentiating between hot dog and hamburger, which imo are basically the\nsame ðŸ¤£."}]},{type:a,value:i},{type:b,tag:k,props:{},children:[{type:a,value:"SeeFood takes inspiration from Jian-Yang's \"SeeFood\" app in HBO's Silicon\nValley TV series, which can only classify foods as "},{type:b,tag:q,props:{},children:[{type:a,value:K}]},{type:a,value:L},{type:b,tag:q,props:{},children:[{type:a,value:"not hot dog"}]},{type:a,value:". I wrote this app as a joke after showing Garbage Vision to my\nfriends a day earlier."}]},{type:a,value:i},{type:b,tag:j,props:{className:[u,r]},children:[{type:a,value:c},{type:b,tag:j,props:{className:[n]},children:[{type:a,value:l},{type:b,tag:m,props:{src:"\u002Fprojects\u002Fseefood\u002Fimg\u002Fmain-screen.PNG"},children:[]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:j,props:{className:[n]},children:[{type:a,value:l},{type:b,tag:m,props:{src:"\u002Fprojects\u002Fseefood\u002Fimg\u002Fhot-dog-classification.PNG"},children:[]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:j,props:{className:[n]},children:[{type:a,value:l},{type:b,tag:m,props:{src:"\u002Fprojects\u002Fseefood\u002Fimg\u002Fhot-dog-confidence-scores.PNG"},children:[]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:j,props:{className:[n]},children:[{type:a,value:l},{type:b,tag:m,props:{src:"\u002Fprojects\u002Fseefood\u002Fimg\u002Fnot-a-hot-dog-classification.PNG"},children:[]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:j,props:{className:[n]},children:[{type:a,value:l},{type:b,tag:m,props:{src:"\u002Fprojects\u002Fseefood\u002Fimg\u002Fnot-a-hot-dog-confidence-scores.PNG"},children:[]},{type:a,value:c}]},{type:a,value:i}]}]},dir:s,path:"\u002Fprojects\u002Fseefood",extension:t,createdAt:o,updatedAt:o},{slug:"garbage-vision",description:"A very simple iOS app for identifying trash.",title:N,date:"2020-12-25T01:06:08-08:00",github:"https:\u002F\u002Fgithub.com\u002Fj43cheun\u002FGarbageVision.git",tags:[F,G,H,I,J],toc:[],body:{type:p,children:[{type:b,tag:k,props:{},children:[{type:a,value:"Garbage Vision is a very simple iOS app that I wrote for identifying trash.\nGiven an image, Garbage Vision classifies the subject into one of six possible\nclasses: Cardboard, Glass, Metal, Paper, Plastic, and Trash. The app is written\nin Swift and its UI is implemented using the Swift UI framework. Classification\nis handled... poorly... by the Garbage Net Core ML model, which I created using\nApple's Create ML app and trained using a trash image dataset from the\n"},{type:b,tag:d,props:{href:"https:\u002F\u002Fgithub.com\u002Fgarythung\u002Ftrashnet.git",rel:[e,f,g],target:h},children:[{type:a,value:"trashnet"}]},{type:a,value:" GitHub repo by Gary\nThung. In practice, classification seemed to be hit or miss, especially in\ndifferentiating between Paper and Plastic."}]},{type:a,value:i},{type:b,tag:k,props:{},children:[{type:a,value:"I was inspired to create Garbage Vision after seeing the various\ncompost, recycle, and trash signs at my workplace. The idea of a mobile app\nthat could visually identify trash sounded intriguing as a logical extension.\nAlso, I had nothing better to do on Christmas due to the ongoing COVID-19\npandemic \u003E:("}]},{type:a,value:i},{type:b,tag:j,props:{className:[u,r]},children:[{type:a,value:c},{type:b,tag:j,props:{className:[n]},children:[{type:a,value:l},{type:b,tag:m,props:{src:"\u002Fprojects\u002Fgarbage-vision\u002Fimg\u002Fmain-screen.PNG"},children:[]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:j,props:{className:[n]},children:[{type:a,value:l},{type:b,tag:m,props:{src:"\u002Fprojects\u002Fgarbage-vision\u002Fimg\u002Fclassification.PNG"},children:[]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:j,props:{className:[n]},children:[{type:a,value:l},{type:b,tag:m,props:{src:"\u002Fprojects\u002Fgarbage-vision\u002Fimg\u002Fconfidence-scores.PNG"},children:[]},{type:a,value:c}]},{type:a,value:i}]}]},dir:s,path:M,extension:t,createdAt:o,updatedAt:o},{slug:"nested-resiliency",description:"Storage Spaces driver support for 1 node + 1 drive fault tolerance on 2-node S2D clusters.",title:"Nested Resiliency",date:"2018-10-02T00:00:00-08:00",info:"https:\u002F\u002Fdocs.microsoft.com\u002Fen-us\u002Fwindows-server\u002Fstorage\u002Fstorage-spaces\u002Fnested-resiliency",tags:["Microsoft","Windows","S2D",O,P],toc:[],body:{type:p,children:[{type:b,tag:k,props:{},children:[{type:a,value:"During the development of Windows Server 2019, one of the features that I worked\non at Microsoft was adding Storage Spaces driver support for provisioning,\ndeploying, and managing Storage Spaces with 1 node + 1 drive fault tolerance.\nThis feature was desired for 2-node Storage Spaces Direct (S2D) cluster\ndeployments so that a Storage Space could survive an additional drive failure if\n1 of 2 nodes went offline for any reason (e.g., node reboot)."}]}]},dir:s,path:"\u002Fprojects\u002Fnested-resiliency",extension:t,createdAt:Q,updatedAt:Q},{slug:"a-distributed-garbage-collection-system",description:"Fourth Year Design Project",title:R,date:"2015-02-13T00:00:00-08:00",github:"https:\u002F\u002Fgithub.com\u002Fj43cheun\u002FFYDP.git",tags:["ATmega328P",S,O,P,D,"Google Maps",B,"Java",T,C,"k-means++","MRTA",U,"Node.js"],toc:[],body:{type:p,children:[{type:b,tag:k,props:{},children:[{type:b,tag:q,props:{},children:[{type:a,value:R}]},{type:a,value:" was my group's Fourth Year Design\nProject for Electrical and Computer Engineering (ECE) at the University of\nWaterloo. For our project, we chose to tackle the problem of littering from an\nengineering standpoint. Our rationale for the accumulation of litter was that\ngarbage bins are distributed suboptimally within a given area."}]},{type:a,value:i},{type:b,tag:k,props:{},children:[{type:a,value:"Our project sought to solve this littering problem through the design and\nimplementation of a crowd-sourced data-driven management system for allocating\ngarbage bins within a given area. This solution consisted of 2 components: the\ngarbage bin embedded system and the garbage bin management server. The garbage\nbin embedded system would be used to gather sensor data about a garbage bin,\nwhile the garbage bin management server would be used to manage the distribution\nof garbage bins in the area based on garbage bin sensor data and crowd-sourced\nlittering GPS coordinates. Our solution was partially inspired by the cleaning\nrobots from "},{type:b,tag:d,props:{href:"https:\u002F\u002Fen.wikipedia.org\u002Fwiki\u002FA_Certain_Scientific_Railgun",rel:[e,f,g],target:h},children:[{type:a,value:"A Certain Scientific\nRailgun"}]},{type:a,value:E}]},{type:a,value:i},{type:b,tag:k,props:{},children:[{type:a,value:"In our prototype, each garbage bin was outfitted with an "},{type:b,tag:d,props:{href:"https:\u002F\u002Fwww.adafruit.com\u002Fproduct\u002F746",rel:[e,f,g],target:h},children:[{type:a,value:"Adafruit Ultimate GPS\nBreakout"}]},{type:a,value:" GPS sensor, an\n"},{type:b,tag:d,props:{href:"https:\u002F\u002Fwww.sparkfun.com\u002Fproducts\u002F15569",rel:[e,f,g],target:h},children:[{type:a,value:"HCSR04"}]},{type:a,value:" ultrasonic distance sensor, a\n"},{type:b,tag:d,props:{href:"https:\u002F\u002Fwww.sparkfun.com\u002Fproducts\u002F10988",rel:[e,f,g],target:h},children:[{type:a,value:"TMP36"}]},{type:a,value:" temperature sensor, an\n"},{type:b,tag:d,props:{href:"https:\u002F\u002Fwww.microchip.com\u002Fwwwproducts\u002Fen\u002FATmega328P",rel:[e,f,g],target:h},children:[{type:a,value:"ATMega328P"}]},{type:a,value:"\nmicrocontroller, and a "},{type:b,tag:d,props:{href:"https:\u002F\u002Fwww.raspberrypi.org",rel:[e,f,g],target:h},children:[{type:a,value:"Raspberry Pi"}]},{type:a,value:". The GPS\nsensor was used to determine the current position of the garbage bin, while the\nsonar and temperature sensors were used to determine how full the garbage bin\nwas. These sensors were driven by the ATMega328P microcontroller, which was in\nturn driven by the Raspberry Pi. The Raspberry Pi was used to send sensor data\nabout the garbage bin back to the garbage bin management server. It ran a\nNode.js server to service GET requests for the garbage bin sensor data."}]},{type:a,value:i},{type:b,tag:k,props:{},children:[{type:a,value:"Our prototype garbage bin management server consisted of three submodules: the\n"},{type:b,tag:d,props:{href:"https:\u002F\u002Fwww.mysql.com",rel:[e,f,g],target:h},children:[{type:a,value:U}]},{type:a,value:" database, the\n"},{type:b,tag:d,props:{href:"https:\u002F\u002Fprojects.eclipse.org\u002Fprojects\u002Fee4j.jsp",rel:[e,f,g],target:h},children:[{type:a,value:T}]},{type:a,value:" web server, and the web\nfrontend. The MySQL database was used to keep track of registered garbage bins\nand crowd-sourced littering GPS coordinates. The JSP web server served as the\nbackend for the web frontend. It was used to run garbage bin allocation\nalgorithms (based on k-means++ clustering and multi-robot task allocation) using\ncrowd-sourced littering GPS coordinates and garbage bin sensor data to figure\nout where to allocate each registered garbage bin in the area. The web frontend\nwas implemented using the "},{type:b,tag:d,props:{href:"https:\u002F\u002Fgetbootstrap.com",rel:[e,f,g],target:h},children:[{type:a,value:S}]},{type:a,value:" CSS framework\nand featured a Google Maps interface and a simple form for visualizing the\ndistribution of crowd-sourced littering positions and the distribution of\nregistered garbage bins in the area, adding new littering GPS coordinates, and\nmanaging registered garbage bins."}]},{type:a,value:i},{type:b,tag:j,props:{className:[u,r]},children:[{type:a,value:c},{type:b,tag:j,props:{className:[n]},children:[{type:a,value:l},{type:b,tag:m,props:{src:"\u002Fprojects\u002Fa-distributed-garbage-collection-system\u002Fimg\u002Fgarbage-bin-embedded-system.jpg"},children:[]},{type:a,value:c}]},{type:a,value:i}]},{type:a,value:i},{type:b,tag:j,props:{className:[u,r]},children:[{type:a,value:c},{type:b,tag:j,props:{className:[n]},children:[{type:a,value:l},{type:b,tag:m,props:{src:"\u002Fprojects\u002Fa-distributed-garbage-collection-system\u002Fimg\u002Fposter.png"},children:[]},{type:a,value:c}]},{type:a,value:i}]}]},dir:s,path:"\u002Fprojects\u002Fa-distributed-garbage-collection-system",extension:t,createdAt:V,updatedAt:V},{slug:"science-quiz-2007",description:"A very simple interactive science quiz program written in Turing.",title:"Science Quiz 2007",date:"2007-12-20T00:00:00-05:00",github:"https:\u002F\u002Fgithub.com\u002Fj43cheun\u002FScienceQuiz2007.git",tags:["Turing"],toc:[],body:{type:p,children:[{type:b,tag:k,props:{},children:[{type:a,value:"Science Quiz 2007 is a very simple interactive science quiz program written in\nthe Turing programmimg language. The program uses imported JPEG images and WAV\naudio files to test users on basic concepts from ecology and chemistry from\nGrade 10 science. This program was written in order to satisfy the requirements\nfor the summative of the Computer Engineering Technology course I took in Grade\n10. The program is poorly written and has a lot of duplicated code because at\nthe time, I wasn't aware that classes, functions, and loops were a thing ðŸ˜³."}]},{type:a,value:i},{type:b,tag:j,props:{className:["has-text-centered",r]},children:[{type:a,value:c},{type:b,tag:"figure",props:{className:["image","is-inline-block"]},children:[{type:a,value:l},{type:b,tag:m,props:{className:["is-centered"],src:"\u002Fprojects\u002Fscience-quiz-2007\u002Fimg\u002Ftitle-screen.png"},children:[]},{type:a,value:c}]},{type:a,value:i}]}]},dir:s,path:"\u002Fprojects\u002Fscience-quiz-2007",extension:t,createdAt:o,updatedAt:o}]}],fetch:[],mutations:void 0}}("text","element","\n  ","a","nofollow","noopener","noreferrer","_blank","\n","div","p","\n    ","img","column","2021-02-17T10:39:15.175Z","root","strong","mt-5","\u002Fprojects",".md","columns","blog","Nuxt.js","Vue.js","Buefy","Bulma","Markdown","HTML","JavaScript","CSS",".","iOS","Swift","SwiftUI","Core ML","Vision","hot dog"," or\n","\u002Fprojects\u002Fgarbage-vision","Garbage Vision","C","C++","2021-02-17T11:44:35.560Z","A Distributed Garbage Collection System","Bootstrap","JSP","MySQL","2021-03-08T06:10:03.938Z")));